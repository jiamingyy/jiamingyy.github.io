import{_ as o,c as a,a3 as l,o as i}from"./chunks/framework.DWZwO2WB.js";const h=JSON.parse('{"title":"【FPGA】verilog编程规范","description":"","frontmatter":{"title":"【FPGA】verilog编程规范","date":"2022-09-19T15:43:26.000Z","tags":["数字电路","FPGA"],"category":["FPGA"]},"headers":[],"relativePath":"posts/【FPGA】verilog-编程规范.md","filePath":"posts/【FPGA】verilog-编程规范.md","lastUpdated":1727688963000}'),t={name:"posts/【FPGA】verilog-编程规范.md"};function r(d,e,c,s,n,p){return i(),a("div",null,e[0]||(e[0]=[l('<p>参考华为内部的<code>verilog</code>编程规范，总结自己的代码风格。</p><h2 id="设计风格" tabindex="-1">设计风格 <a class="header-anchor" href="#设计风格" aria-label="Permalink to &quot;设计风格&quot;">​</a></h2><p>内容包括变量（信号）命名规范，模块命名规范等</p><h3 id="信号与常量" tabindex="-1">信号与常量 <a class="header-anchor" href="#信号与常量" aria-label="Permalink to &quot;信号与常量&quot;">​</a></h3><ol><li>对低电平有效的信号，信号名后缀“_n”</li><li>使用降序排列的定义向量有效位顺序，最低为是0</li><li>使用大写字母定义<code>parameter</code>,使用小写字母定义 <code>input</code>，<code>reg</code>，<code>output</code>等信号的命名</li><li>时钟信号统一使用前缀 &quot;clk&quot;，复位信号统一使用前缀 &quot;rst&quot;</li></ol><h3 id="模块" tabindex="-1">模块 <a class="header-anchor" href="#模块" aria-label="Permalink to &quot;模块&quot;">​</a></h3><ol><li>模块的命名全部小写</li><li>到其他模块的信号声明顺序按照 : 输入、（双向）、输出</li><li>每个模块只包含一个模块，模块名称与文件名保持一致</li><li>在调用模块时，使用<code>name_based</code>的方式进行调用而不是<code>order_based</code>的方式进行调用</li><li>模块例化统一使用 &quot;U_name_i&quot;，进行命名，如果多次例化，则i使用数字编号</li></ol><h2 id="可靠性" tabindex="-1">可靠性 <a class="header-anchor" href="#可靠性" aria-label="Permalink to &quot;可靠性&quot;">​</a></h2><p>在模块设计时遵守以下原则：</p><ol><li>同步时序逻辑块<code>always</code>块中有且只有一个使用信号，并且在同一个沿做出动作</li><li>不要在时钟信号路径上添加任何<code>buffer</code></li><li>不要采取向量的方式定义一组时钟信号</li><li>一个<code>always</code>语句中只能有一个事件列表</li><li>时序逻辑电路中统一使用非阻塞赋值方式</li><li>组合逻辑电路中统一使用阻塞赋值方式</li></ol>',10)]))}const _=o(t,[["render",r]]);export{h as __pageData,_ as default};
