import{_ as e,c as a,a3 as l,o as n}from"./chunks/framework.DWZwO2WB.js";const g=JSON.parse('{"title":"【Research】浮点数运算","description":"","frontmatter":{"title":"【Research】浮点数运算","date":"2022-08-25T13:10:43.000Z","tags":["FPGA","Float"],"category":["Research"]},"headers":[],"relativePath":"posts/【Research】浮点数运算.md","filePath":"posts/【Research】浮点数运算.md","lastUpdated":1727688963000}'),s={name:"posts/【Research】浮点数运算.md"};function r(i,t,d,c,o,h){return n(),a("div",null,t[0]||(t[0]=[l('<p>浮点数在内存中的表达</p><h2 id="浮点数的表示-ieee754" tabindex="-1">浮点数的表示（IEEE754） <a class="header-anchor" href="#浮点数的表示-ieee754" aria-label="Permalink to &quot;浮点数的表示（IEEE754）&quot;">​</a></h2><h3 id="组成部分" tabindex="-1">组成部分 <a class="header-anchor" href="#组成部分" aria-label="Permalink to &quot;组成部分&quot;">​</a></h3><p>浮点数在内存中分为3个部分进行表示：</p><ul><li>Sign (符号位)</li><li>Exponents (指数部分)</li><li>Matissa (尾数部分)</li></ul><p>其中符号位固定占1个bit，指数部分和尾数部分根据不同的数据类型所占用的大小也不相同，具体情况见下面的表</p><table tabindex="0"><thead><tr><th style="text-align:center;">num total bits</th><th style="text-align:center;">precision</th><th style="text-align:center;">exponent bits</th><th style="text-align:center;">mantissa bits</th><th style="text-align:center;">bias</th></tr></thead><tbody><tr><td style="text-align:center;">64 bits</td><td style="text-align:center;">double</td><td style="text-align:center;">11</td><td style="text-align:center;">52</td><td style="text-align:center;">1023</td></tr><tr><td style="text-align:center;">32 bits</td><td style="text-align:center;">single</td><td style="text-align:center;">8</td><td style="text-align:center;">23</td><td style="text-align:center;">127</td></tr><tr><td style="text-align:center;">16 bits</td><td style="text-align:center;">half</td><td style="text-align:center;">5</td><td style="text-align:center;">10</td><td style="text-align:center;">15</td></tr></tbody></table><p><img src="https://i.imgur.com/5cE5pYl.png" alt="image-20220825132831256"></p><h3 id="表示规则" tabindex="-1">表示规则 <a class="header-anchor" href="#表示规则" aria-label="Permalink to &quot;表示规则&quot;">​</a></h3><p>浮点数规定了三种表示类型：规格化数、非规格化数、特殊值。</p><p>规格化数就是比较常用的在计算机中表示小数的方式，其转化为</p>',11)]))}const x=e(s,[["render",r]]);export{g as __pageData,x as default};
