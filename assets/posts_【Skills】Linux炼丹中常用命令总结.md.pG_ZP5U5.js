import{_ as i,c as a,a3 as n,o as l}from"./chunks/framework.DWZwO2WB.js";const c=JSON.parse('{"title":"【Skills】Linux炼丹中常用命令总结","description":"","frontmatter":{"title":"【Skills】Linux炼丹中常用命令总结","date":"2022-08-09T15:22:05.000Z","tags":["Linux","shell"],"category":["Skills"]},"headers":[],"relativePath":"posts/【Skills】Linux炼丹中常用命令总结.md","filePath":"posts/【Skills】Linux炼丹中常用命令总结.md","lastUpdated":1727688963000}'),p={name:"posts/【Skills】Linux炼丹中常用命令总结.md"};function h(t,s,e,k,d,r){return l(),a("div",null,s[0]||(s[0]=[n(`<p>总结在服务器中跑深度学习的时候，常常需要使用的Linux 命令。</p><p>可搭配前面提到 {% post_link docker搭建深度学习环境 %}和{% post_link tmux使用总结%}相关文章食用。</p><h2 id="进程操作" tabindex="-1">进程操作 <a class="header-anchor" href="#进程操作" aria-label="Permalink to &quot;进程操作&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看当前运行的所有进程</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ps</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -aux</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 结束一个进程, PID 可通过进程查找指令查看</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">kill</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 9</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PID</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 结束所有python 进程（慎重使用）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">killall</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python</span></span></code></pre></div><h2 id="资源占用与文件查找" tabindex="-1">资源占用与文件查找 <a class="header-anchor" href="#资源占用与文件查找" aria-label="Permalink to &quot;资源占用与文件查找&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 实时交互式显示 当前系统资源占用情况</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">htop</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">top</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 实时监控 GPU 占用</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">watch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nvidia-smi</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看磁盘剩余空间</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">df</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -hl</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看当前目录下各个文件/文件夹的大小</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">du</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -h</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> –max-depth=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看当前目录下所有文件大小的总和</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">du</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -sh</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看当前文件个数, 使用 ^d 是统计文件夹的个数</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;^-&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> wc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查找文件，后面跟的是正则表达式</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">find</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;*.tar&quot;</span></span></code></pre></div><h2 id="文件的上传以及下载" tabindex="-1">文件的上传以及下载 <a class="header-anchor" href="#文件的上传以及下载" aria-label="Permalink to &quot;文件的上传以及下载&quot;">​</a></h2><p>传输数据集的时候可以使用以下命令</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 可以递归地创建文件夹</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/to/...</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 复制文件夹</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sour_dir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dest_dir</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 从远程服务器下载文件 SCP</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> username@servername:/path/filename</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /tmp/local_destination</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 需要下载文件夹 则加上 -r 参数</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> username@servername:/path/filename</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /tmp/local_destination</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 上传文件则把两边的位置调换过来</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /tmp/local_dir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> username@servername:remote_dir</span></span></code></pre></div><p>文件压缩与解压</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 打包一个文件夹为一个zip压缩文件</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># -r 参数为递归地在文件夹中寻找文件压缩</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">zip</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file_name.zip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/to/dir</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 解压一个zip压缩文件</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># -d 参数可以指定解压后文件的保存目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unzip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file.zip</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/to/extract/</span></span></code></pre></div><h2 id="硬盘操作" tabindex="-1">硬盘操作 <a class="header-anchor" href="#硬盘操作" aria-label="Permalink to &quot;硬盘操作&quot;">​</a></h2><p>添加新硬盘，格式化硬盘</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看新硬盘是否已经被成功安装, 同时该命令还可以查看新的硬盘所挂载到的设备号，例如 sda,sdb,以及硬盘中已经存在的分区，分区的挂载信息等</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lsblk</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 加上 -f参数可以查看分区的UUID，UUID在自动挂载时会使用</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lsblk</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建分区, 该工具提供了基于命令行的简易分区工具，很好用</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cfdisk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/sda</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 如果有分区的大小大于2T，则需要先将硬盘格式转换为GPT格式</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">parted</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/sda</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 执行下面的命令, 根据提示完成转换即可</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mklabel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gpt</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 退出parted，使用 cfdisk进行分区</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">q</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用 cfdisk 分区完成后还需要将分区格式化为 ext4 格式</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkfs</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ext4</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/sda1</span></span></code></pre></div><p>下一步就是需要将已经分好区的硬盘挂载到相应的目录，这里假设需要挂载的硬盘号为 <code>/dev/sda1</code>,需要挂载到目录是 <code>/home/user/exdisk1</code></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建目录，这步可以跳过</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /home/user/exdisk1</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 临时挂载</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mount</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/sda1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /home/user/exdisk1</span></span></code></pre></div><p>如果只是临时使用该分区（例如挂载一个U盘），使用上面的命令也就足够了，如果需要挂载的是一个需要长期使用的U盘，则需要修改<code>/etc/fstab</code>文件。</p><p>第一步是使用 <code>lsblk -f</code>命令查看分区的<code>UUID</code>，每个磁盘分区的<code>UUID</code>在系统中都是唯一的，即使重启后也不会改变，如下图 框出来的就是此次需要挂载分区的<code>UUID</code></p><p><em>注意：如果没有挂载，后面的挂载点的内容是空的</em></p><p><img src="https://i.imgur.com/D7ekKuo.png" alt="image-20221004150518883"></p><p>第二步是修改<code>/etc/fstab</code>文件，添加上一行，内容可以看文件上面的注释</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &lt;file system&gt; &lt;mount point&gt;   &lt;type&gt;  &lt;options&gt;       &lt;dump&gt;  &lt;pass&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">UUID</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">af931fd6-b0f5-455b-8e3a-6260b18fde24</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 	/home/dilib5/ex_disk1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 	ext4</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 	defaults</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 	2</span></span></code></pre></div><p>将<code>/etc/fstab</code>修改完成后，执行全部挂载命令验证所添加的内容是否正确，如果不正确可能会导致系统无法启动！</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mount</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span></span></code></pre></div><p>最后重启系统就可以看到硬盘已经成功挂载了，（用的是同一张图, 哈哈哈哈，逃） <img src="https://i.imgur.com/vhm6xqS.png" alt="image-20221004151512869"></p>`,25)]))}const g=i(p,[["render",h]]);export{c as __pageData,g as default};
